0# ssh tunel und proxy 
## Zugriff von außen
Wenn der Server keine GUI + Webbrowser hat, kann man auch von außen auf den Server-internen Port 19999 zugreifen, indem man den Port zu sich nach Hause auf den Rechner tunnelt. (Zuhause ausführen:)
> ssh -L 19999:localhost:19999 -N root@meinserver.tld
ssh -L  8080:localhost:8080 -N einfachgewaltig@94.16.104.246 -p 33445
ssh -L  8888:localhost:8888 -N einfachgewaltig@94.16.104.246 -p 33445


#Auf dem Desktop-Rechner kann dann im Webbrowser „localhost:19999“ geöffnet werden und das Netdata-Webinterface erscheint. Wenn eine zweite, parallele Verbindung zu einer anderen Netdata-Instanz auf einem anderen Server aufgebaut werden soll, wählt man für die zweite Verbindung einen anderen lokalen Port:
> ssh -L 19998:localhost:19999 -N root@meinserver2.tld
(Das Interface für Server 2 ist dann via 19998 verfügbar)

#Wer es gerne komfortabler hat und nicht überall einen SSH-Tunnel aufbauen will oder kann, kann den internen Port auch über einen Webserver / Webproxy nach außen hin verfügbar machen. Am besten mit HTTP Base Auth. Wie das geht, kann man z.B. hier für Apache nachlesen: Apache Webproxy

Eine Proxy-Konfiguration für Nginx könnte z.B. so aussehen (ohne Auth!)

server {
    listen 80;
    listen [::]:80;
    server_name monitor.meinserver.tld;
   
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:19999;
        proxy_redirect off;
    }
}
